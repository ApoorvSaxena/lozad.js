/*! lozad.js - v1.14.0 - 2020-07-28
* https://github.com/ApoorvSaxena/lozad.js
* Copyright (c) 2020 Apoorv Saxena; Licensed MIT */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.lozad=e()}(this,function(){"use strict";
/**
   * Detect IE browser
   * @const {boolean}
   * @private
   */var d="undefined"!=typeof document&&document.documentMode,b=function(t){return window&&window[t]},f=["data-iesrc","data-alt","data-src","data-srcset","data-background-image","data-toggle-class"],m={rootMargin:"0px",threshold:0,load:function(t){if("picture"===t.nodeName.toLowerCase()){var e=document.createElement("img");d&&t.getAttribute("data-iesrc")&&(e.src=t.getAttribute("data-iesrc")),t.getAttribute("data-alt")&&(e.alt=t.getAttribute("data-alt")),t.append(e)}if("video"===t.nodeName.toLowerCase()&&!t.getAttribute("data-src")&&t.children){for(var r=t.children,a=void 0,i=0;i<=r.length-1;i++)(a=r[i].getAttribute("data-src"))&&(r[i].src=a);t.load()}if(t.getAttribute("data-src")&&(t.src=t.getAttribute("data-src")),t.getAttribute("data-srcset")&&t.setAttribute("srcset",t.getAttribute("data-srcset")),t.getAttribute("data-background-image"))t.style.backgroundImage="url('"+t.getAttribute("data-background-image").split(",").join("'),url('")+"')";else if(t.getAttribute("data-background-image-set")){var o=t.getAttribute("data-background-image-set").split(","),n=o[0].substr(0,o[0].indexOf(" "))||o[0];// Substring before ... 1x
n=-1===n.indexOf("url(")?"url("+n+")":n,1===o.length?t.style.backgroundImage=n:t.setAttribute("style",(t.getAttribute("style")||"")+"background-image: "+n+"; background-image: -webkit-image-set("+o+"); background-image: image-set("+o+")")}t.getAttribute("data-toggle-class")&&t.classList.toggle(t.getAttribute("data-toggle-class"))},loaded:function(){}};
/**
   *
   * @param {string} type
   *
   */function v(t){t.setAttribute("data-loaded",!0)}var A=function(t){return"true"===t.getAttribute("data-loaded")};return function(){var r,a,e,i=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},o=Object.assign({},m,t),n=o.root,d=o.rootMargin,u=o.threshold,s=o.load,g=o.loaded,c=void 0,l=void 0;return b("IntersectionObserver")&&(c=new IntersectionObserver((r=s,a=g,function(t,e){t.forEach(function(t){(0<t.intersectionRatio||t.isIntersecting)&&(e.unobserve(t.target),A(t.target)||(r(t.target),v(t.target),a(t.target)))})}),{root:n,rootMargin:d,threshold:u})),b("MutationObserver")&&(l=new MutationObserver((e=s,function(t){t.forEach(function(t){A(t.target)&&"attributes"===t.type&&-1<f.indexOf(t.attributeName)&&e(t.target)})}))),{observe:function(){for(var t=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)}(i,n),e=0;e<t.length;e++)A(t[e])||(c?(l&&l.observe(t[e],{subtree:!0,attributes:!0,attributeFilter:f}),c.observe(t[e])):(s(t[e]),v(t[e]),g(t[e])))},triggerLoad:function(t){A(t)||(s(t),v(t),g(t))},observer:c,mutationObserver:l}}});
